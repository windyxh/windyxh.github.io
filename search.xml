<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python爬虫瀑布流</title>
    <url>/2020/03/25/Python%E7%88%AC%E8%99%AB%E7%80%91%E5%B8%83%E6%B5%81/</url>
    <content><![CDATA[<h4 id="Python&#x722C;&#x866B;&#x7011;&#x5E03;&#x6D41;"><a href="#Python&#x722C;&#x866B;&#x7011;&#x5E03;&#x6D41;" class="headerlink" title="Python&#x722C;&#x866B;&#x7011;&#x5E03;&#x6D41;"></a>Python&#x722C;&#x866B;&#x7011;&#x5E03;&#x6D41;</h4><hr>
<p>&#x58C1;&#x7EB8;&#x7F51;&#x7AD9;&#xFF1A;<a href="https://ss.netnr.com/wallpaper#26" target="_blank" rel="noopener">&#x52A8;&#x6F2B;&#x58C1;&#x7EB8;</a><br><strong>&#x6B65;&#x9AA4;&#xFF1A;</strong></p>
<ol>
<li>&#x6309;F12&#x6253;&#x5F00;&#x5BA1;&#x67E5;&#xFF0C;&#x627E;&#x5230;&#x7F51;&#x9875;&#x7684;&#x771F;&#x6B63;&#x8BF7;&#x6C42;&#x5730;&#x5740;urls&#xFF0C;&#x53D1;&#x73B0;&#x7011;&#x5E03;&#x6D41;&#x7F51;&#x5740;&#x7684;&#x53D8;&#x5316;&#x89C4;&#x5F8B;&#xFF0C;&#x53D1;&#x73B0;&#x53EA;&#x6709;start&#x5728;&#x4E0D;&#x65AD;&#x53D8;&#x5316;&#x3002;<br><img src="/2020/03/25/Python%E7%88%AC%E8%99%AB%E7%80%91%E5%B8%83%E6%B5%81/1.png" alt="&#x89E3;&#x6790;&#x56FE;&#x7247;"></li>
<li>&#x6253;&#x5F00;&#x6BCF;&#x4E2A;urls&#xFF0C;&#x8FD9;&#x4E2A;&#x56FE;&#x7247;&#x7F51;&#x7AD9;&#x6BCF;&#x5F20;&#x56FE;&#x6709;&#x591A;&#x79CD;&#x6E05;&#x6670;&#x5EA6;&#xFF0C;&#x627E;&#x5230;&#x8BE5;&#x9875;&#x9762;&#x6240;&#x6709;&#x7684;&#x539F;&#x56FE;&#x7684;&#x5730;&#x5740;url&#xFF0C;&#x7528;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x628A;&#x4ED6;&#x4EEC;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x3002;<br><img src="/2020/03/25/Python%E7%88%AC%E8%99%AB%E7%80%91%E5%B8%83%E6%B5%81/2.png" alt="&#x89E3;&#x6790;&#x56FE;&#x7247;"></li>
</ol>
<p>&#x8BE6;&#x89E3;&#x4EE3;&#x7801;&#xFF1A;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import&#xA0;re</span><br><span class="line">import&#xA0;requests</span><br><span class="line">n&#xA0;=&#xA0;int(input(&quot;&#x8F93;&#x5165;&#x8981;&#x722C;&#x53D6;&#x7684;&#x5F20;&#x6570;&#xFF1A;&quot;))</span><br><span class="line">def&#xA0;main():</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;i=0</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;#&#xA0;&#x56FE;&#x7247;&#x8BF7;&#x6C42;&#x5730;&#x5740;&#x94FE;&#x63A5;&#x7684;text&#x91CC;&#x6BCF;&#x9875;&#x5305;&#x542B;12&#x5F20;&#x539F;&#x56FE;&#x7684;&#x5730;&#x5740;&#x94FE;&#x63A5;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;for&#xA0;index&#xA0;in&#xA0;range(1,n,12):</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;#&#x89C2;&#x5BDF;&#x89E3;&#x6790;&#x5728;request&#x91CC;&#x7684;&#x771F;&#x7684;&#x56FE;&#x7247;&#x7F51;&#x5740;&#x7ED3;&#x6784;&#xFF0C;&#x6784;&#x9020;&#x6BCF;&#x9875;url&#x5730;&#x5740;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;url&#xA0;=&#xA0;&quot;https://bird.ioliu.cn/v2?url=http://wallpaper.apc.360.cn/index.php?c=WallPaper&amp;start=&quot;+str(index)+&quot;&amp;count=12&amp;from=360chrome&amp;a=getAppsByCategory&amp;cid=26&quot;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;#&#x83B7;&#x53D6;&#x5730;&#x5740;&#x94FE;&#x63A5;&#x7684;&#x6587;&#x672C;&#x4FE1;&#x606F;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;html&#xA0;=&#xA0;requests.get(url).text</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;#&#x7528;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x628A;&#x6587;&#x672C;&#x91CC;&#x6240;&#x6709;&#x539F;&#x56FE;&#x7684;&#x94FE;&#x63A5;&#x627E;&#x51FA;&#x6765;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;pic_urls&#xA0;=&#xA0;re.findall(&apos;&quot;resolution&quot;:&quot;.*?&quot;,&quot;url_mobile&quot;:&quot;&quot;,&quot;url&quot;:&quot;(.*?)&quot;,&apos;,html,re.S)</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for&#xA0;each&#xA0;in&#xA0;pic_urls:</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;#&#x63D0;&#x53D6;&#x7684;&#x56FE;&#x7247;&#x94FE;&#x63A5;&#x6709;&#x8F6C;&#x4E49;&#x5B57;&#x7B26;&quot;\&quot;,&#x9700;&#x8981;&#x66FF;&#x6362;&#x4E3A;&#x7A7A;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;each&#xA0;=&#xA0;each.replace(&quot;\\&quot;,&#xA0;&quot;&quot;)</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;print(each)</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;#&#x4E0B;&#x8F7D;&#x56FE;&#x7247;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;pic=&#xA0;requests.get(each)</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;string&#xA0;=&#xA0;&apos;jdimg\\&apos;+&#xA0;str(i)&#xA0;+&#xA0;&apos;.jpg&apos;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;fp&#xA0;=&#xA0;open(string,&apos;wb&apos;)</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;#&#x56FE;&#x7247;&#x5185;&#x5BB9;&#x5199;&#x5165;&#x672C;&#x5730;&#x6587;&#x4EF6;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;fp.write(pic.content)</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;fp.close()</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;i&#xA0;+=&#xA0;1</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>

<p>&#x5176;&#x4ED6;&#x53C2;&#x8003;&#xFF1A;<br><a href="https://www.cnblogs.com/m-chen/p/10136958.html" target="_blank" rel="noopener">&#x4E00;&#x822C;&#x9759;&#x6001;&#x7F51;&#x9875;&#x56FE;&#x7247;</a><br><a href="https://zhuanlan.zhihu.com/p/85739850" target="_blank" rel="noopener">&#x56FE;&#x96C6;&#x5F62;&#x5F0F;&#x7F51;&#x9875;</a></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>瀑布流</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客如何插入图片</title>
    <url>/2020/03/25/hexo%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h4 id="&#x6B65;&#x9AA4;&#xFF1A;"><a href="#&#x6B65;&#x9AA4;&#xFF1A;" class="headerlink" title="&#x6B65;&#x9AA4;&#xFF1A;"></a>&#x6B65;&#x9AA4;&#xFF1A;</h4><hr>
<ol>
<li><p>&#x628A;&#x4E3B;&#x9875;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#x91CC;&#x7684;post_asset_folder:&#x8FD9;&#x4E2A;&#x9009;&#x9879;&#x8BBE;&#x7F6E;&#x4E3A;true</p>
</li>
<li><p>&#x5B89;&#x88C5;&#x4E00;&#x4E2A;&#x56FE;&#x7247;&#x8DEF;&#x5F84;&#x8F6C;&#x6362;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x63D2;&#x4EF6;&#x540D;&#x5B57;&#x662F;hexo-asset-image&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image@0.0.2 --save</span><br></pre></td></tr></table></figure>

</li>
</ol>
<blockquote>
<p>&#xFF08;<strong>&#x6CE8;&#x610F;&#xFF1A;</strong> &#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x6700;&#x65B0;&#x7248;&#x672C;&#x662F;0.03&#xFF0C;&#x4F46;&#x662F;&#x6709;bug&#xFF0C;<strong>&#x6240;&#x4EE5;&#x4E00;&#x5B9A;&#x8981;&#x5B89;&#x88C5;0.02&#x7248;&#x672C;</strong>&#x3002;&#xFF09;</p>
</blockquote>
<ol start="3">
<li><p>&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x518D;&#x8FD0;&#x884C;hexo n &#x201C;title&#x201D; &#x6765;&#x751F;&#x6210;md&#x535A;&#x6587;&#x65F6;&#xFF0C;/source/_posts&#x6587;&#x4EF6;&#x5939;&#x5185;&#x9664;&#x4E86;title.md&#x6587;&#x4EF6;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x7684;title&#x6587;&#x4EF6;&#x5939;&#x7528;&#x6765;&#x653E;&#x56FE;&#x7247;&#x3002;</p>
</li>
<li><p>&#x5728;title.md&#x4E2D;&#x5F15;&#x5165;&#x56FE;&#x7247;&#x65F6;&#xFF0C;&#x5148;&#x628A;&#x56FE;&#x7247;&#x590D;&#x5236;&#x5230;title&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x53EA;&#x9700;&#x8981;&#x5728;title.md&#x4E2D;&#x6309;&#x7167;markdown&#x7684;&#x8BED;&#x6CD5;&#x683C;&#x5F0F;&#x5F15;&#x5165;&#x56FE;&#x7247;&#xFF1A;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![&#x56FE;&#x7247;&#x63CF;&#x8FF0;](title/1.jpg)</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>&#x82E5;&#x8981;&#x4F7F;&#x7528;0.03&#x7248;&#x672C;&#xFF0C;bug&#x4FEE;&#x6539;&#x53C2;&#x8003;&#xFF1A;<br><a href="https://blog.xiaolin.mcxhz.cn/2020/03/15/Hexo%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/#First" target="_blank" rel="noopener">&#x56FE;&#x7247;&#x4E0D;&#x80FD;&#x52A0;&#x8F7D;&#x539F;&#x56E0;</a><br><a href="https://segmentfault.com/q/1010000020310187" target="_blank" rel="noopener">hexo &#x56FE;&#x7247;&#x8DEF;&#x5F84;&#x9519;&#x8BEF;/.com//</a></p>
<p><strong>&#x63D2;&#x5165;&#x793A;&#x4F8B;&#xFF1A;</strong><br><img src="/2020/03/25/hexo%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/13.jpg" alt="&#x63D2;&#x5165;&#x7684;&#x7B2C;&#x4E00;&#x5F20;&#x56FE;&#x7247;"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>21.合并两个有序链表</title>
    <url>/2020/03/21/21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<h4 id="方法一：递归"><a href="#方法一：递归" class="headerlink" title="方法一：递归"></a>方法一：递归</h4><p><strong>思路：</strong> 比较两链表当前值的大小，在小的L之后递归调用本函数。<br><strong>代码：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) &#123;</span><br><span class="line">        if(l1&#x3D;&#x3D;NULL)return l2;</span><br><span class="line">        else if(l2&#x3D;&#x3D;NULL)return l1;</span><br><span class="line">        else if(l1-&gt;val&lt;l2-&gt;val)&#123;</span><br><span class="line">            l1-&gt;next &#x3D; mergeTwoLists(l1-&gt;next,l2);</span><br><span class="line">            return l1;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            l2-&gt;next &#x3D; mergeTwoLists(l1,l2-&gt;next);</span><br><span class="line">            return l2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="方法二：迭代"><a href="#方法二：迭代" class="headerlink" title="方法二：迭代"></a>方法二：迭代</h4><p><strong>思路：</strong> 创建第三个表，指针遍历把每个小的值插入，直到L的一方为空，则把另一方全部插入。<br><strong>代码：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) &#123;</span><br><span class="line">        ListNode* p&#x3D;new ListNode(0);</span><br><span class="line">        ListNode* q&#x3D;p;</span><br><span class="line">        if(l1&#x3D;&#x3D;NULL)return l2;</span><br><span class="line">        else if(l2&#x3D;&#x3D;NULL)return l1;</span><br><span class="line">        while(l1!&#x3D;NULL &amp;&amp; l2!&#x3D;NULL)&#123;</span><br><span class="line">            if(l1-&gt;val&lt;&#x3D;l2-&gt;val)&#123;</span><br><span class="line">                p-&gt;next&#x3D;l1;</span><br><span class="line">                l1&#x3D;l1-&gt;next;</span><br><span class="line">                p&#x3D;p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                p-&gt;next&#x3D;l2;</span><br><span class="line">                l2&#x3D;l2-&gt;next;</span><br><span class="line">                p&#x3D;p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    p-&gt;next &#x3D; l1&#x3D;&#x3D;NULL?l2:l1;</span><br><span class="line">    return q-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>力扣</category>
      </categories>
      <tags>
        <tag>递归</tag>
        <tag>链表</tag>
        <tag>迭代</tag>
      </tags>
  </entry>
  <entry>
    <title>20.有效的括号</title>
    <url>/2020/03/20/20-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</url>
    <content><![CDATA[<h4 id="方法一：递归"><a href="#方法一：递归" class="headerlink" title="方法一：递归"></a><strong>方法一：递归</strong></h4><hr>
<p><strong>思路：</strong> 递归匹配串中是否有(),[],{}，有则全替换成空””，所有替换后返回最终的s是否为空。<br><strong>代码：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    &#x2F;&#x2F;unordered_map&lt;char,char&gt; hash&#x3D;&#123;&#123;&#39;(&#39;,&#39;)&#39;&#125;,&#123;&#39;&#123;&#39;,&#39;&#125;&#39;&#125;,&#123;&#39;[&#39;,&#39;]&#39;&#125;&#125;;</span><br><span class="line">    bool isValid(string s) &#123;</span><br><span class="line">        while(strstr(s.c_str(),&quot;()&quot;) || strstr(s.c_str(),&quot;[]&quot;) || strstr(s.c_str(),&quot;&#123;&#125;&quot;))&#123;</span><br><span class="line">        if(strstr(s.c_str(),&quot;()&quot;))</span><br><span class="line">            return isValid(s.replace(s.find(&quot;()&quot;),2,&quot;&quot;));</span><br><span class="line">        else if(strstr(s.c_str(),&quot;[]&quot;))</span><br><span class="line">            return isValid(s.replace(s.find(&quot;[]&quot;),2,&quot;&quot;));</span><br><span class="line">        else if(strstr(s.c_str(),&quot;&#123;&#125;&quot;))</span><br><span class="line">            return isValid(s.replace(s.find(&quot;&#123;&#125;&quot;),2,&quot;&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">        return s&#x3D;&#x3D;&quot;&quot;; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>strstr(s.c_str(), t)：</strong> 判断字符串s是否包含子串t，真返回true，假返回false。<br><strong>s.replace(pos, len, str)：</strong> 用str来替换下标从pos开始替换长度为len的子串。<br><img src="https://pic1.zhimg.com/80/v2-82634c99d3ed6bd27ae1077e5376219c_720w.jpg" alt="replace具体用法"></p>
<h4 id="方法二：栈-amp-Hashmap"><a href="#方法二：栈-amp-Hashmap" class="headerlink" title="方法二：栈&amp;Hashmap"></a><strong>方法二：栈&amp;Hashmap</strong></h4><hr>
<p><strong>思路：</strong></p>
<ol>
<li><p>逐个遍历，把左括号压栈，遇到右括号时则用它的hashmap值与栈顶元素比较，相等则出栈，否则直接返回false。</p>
</li>
<li><p>结尾判栈空，若还有元素则返回false。</p>
</li>
</ol>
<p><strong>注意：</strong></p>
<ul>
<li>1中考虑&quot;]]&quot;这种情况，条件应先加个栈空判断，否则不存在栈顶元素却拿它去比较会越界。</li>
</ul>
<p><strong>代码：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    unordered_map&lt;char,char&gt; hash&#x3D;&#123;&#123;&#39;(&#39;,&#39;)&#39;&#125;,&#123;&#39;&#123;&#39;,&#39;&#125;&#39;&#125;,&#123;&#39;[&#39;,&#39;]&#39;&#125;&#125;;</span><br><span class="line">    bool isValid(string s) &#123;</span><br><span class="line">        if(s.empty())return true;  &#x2F;&#x2F;这句其实可以不要，s空最后返回的也是true</span><br><span class="line">        if(s.size()%2&#x3D;&#x3D;1)return false; &#x2F;&#x2F;奇数个直接pass掉</span><br><span class="line">        stack&lt;char&gt; tmp;</span><br><span class="line">        for(int i&#x3D;0; i&lt;s.size(); i++)&#123;</span><br><span class="line">            if(s.at(i)&#x3D;&#x3D;&#39;(&#39; || s.at(i)&#x3D;&#x3D;&#39;[&#39; || s.at(i)&#x3D;&#x3D;&#39;&#123;&#39;)</span><br><span class="line">                tmp.push(s.at(i));</span><br><span class="line">            else if(!tmp.empty() &amp;&amp; s.at(i)&#x3D;&#x3D;hash[tmp.top()]) &#x2F;&#x2F;特别注意判断栈不空</span><br><span class="line">                tmp.pop();</span><br><span class="line">            else</span><br><span class="line">                return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return tmp.empty();  &#x2F;&#x2F;这里不能直接返回true，因为栈里可能还有元素则是false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>stack<char> tmp;</strong> 创建栈<br><strong>s.at(i)：</strong> 定位字符串中字符。</p>
<p><strong>更多栈操作参见：</strong> <a href="https://blog.csdn.net/clown_pan/article/details/90544995" target="_blank" rel="noopener">C++栈函数stack接口用法</a></p>
]]></content>
      <categories>
        <category>力扣</category>
      </categories>
      <tags>
        <tag>递归</tag>
        <tag>字符串</tag>
        <tag>栈</tag>
        <tag>hashmap</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello world</title>
    <url>/2020/03/18/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
